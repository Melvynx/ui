{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "tanstack-form-complex-demo",
  "type": "registry:example",
  "dependencies": [
    "zod",
    "lucide-react"
  ],
  "registryDependencies": [
    "https://ui.nowts.app/r/tanstack-form.json",
    "card",
    "input",
    "label",
    "button",
    "select",
    "checkbox",
    "switch",
    "textarea",
    "sonner"
  ],
  "files": [
    {
      "path": "examples/tanstack-form-complex-demo.tsx",
      "content": "\"use client\"\n\nimport { toast } from \"sonner\"\nimport { z } from \"zod\"\n\nimport { Card } from \"@/components/ui/card\"\nimport { Field, FieldContent } from \"@/components/ui/field\"\nimport {\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\"\nimport { Switch } from \"@/components/ui/switch\"\nimport {\n  FormDescription,\n  FormLabel,\n  FormMessage,\n  useForm,\n} from \"@/components/ui/tanstack-form\"\n\nconst registrationSchema = z.object({\n  name: z.string().min(2, \"Name must be at least 2 characters\"),\n  email: z.string().email(\"Please enter a valid email address\"),\n  role: z.enum([\"developer\", \"designer\", \"manager\"], {\n    required_error: \"Please select a role\",\n  }),\n  bio: z\n    .string()\n    .min(10, \"Bio must be at least 10 characters\")\n    .max(200, \"Bio must be at most 200 characters\"),\n  newsletter: z.boolean(),\n  notifications: z.boolean(),\n  terms: z.boolean().refine((val) => val === true, {\n    message: \"You must accept the terms and conditions\",\n  }),\n})\n\nexport default function TanstackFormComplexDemo() {\n  const form = useForm({\n    schema: registrationSchema,\n    defaultValues: {\n      name: \"\",\n      email: \"\",\n      role: \"developer\" as const,\n      bio: \"\",\n      newsletter: false,\n      notifications: true,\n      terms: false,\n    },\n    onSubmit: async (values) => {\n      await new Promise((resolve) => setTimeout(resolve, 1000))\n      toast.success(\"Registration successful!\", {\n        description: `Welcome, ${values.name}!`,\n      })\n      console.log(values)\n    },\n  })\n\n  return (\n    <Card className=\"mx-auto w-full max-w-2xl p-6\">\n      <form\n        onSubmit={(e) => {\n          e.preventDefault()\n          e.stopPropagation()\n          form.handleSubmit()\n        }}\n        className=\"space-y-6\"\n      >\n        <div className=\"space-y-2\">\n          <h3 className=\"text-lg font-semibold\">Create Account</h3>\n          <p className=\"text-muted-foreground text-sm\">\n            Fill out the form below to create your account\n          </p>\n        </div>\n\n        <form.AppField name=\"name\">\n          {(field) => (\n            <Field>\n              <FormLabel>Full Name</FormLabel>\n              <FieldContent>\n                <field.Input placeholder=\"John Doe\" />\n                <FormMessage />\n              </FieldContent>\n            </Field>\n          )}\n        </form.AppField>\n\n        <form.AppField name=\"email\">\n          {(field) => (\n            <Field>\n              <FormLabel>Email Address</FormLabel>\n              <FieldContent>\n                <field.Input type=\"email\" placeholder=\"john@example.com\" />\n                <FormMessage />\n              </FieldContent>\n            </Field>\n          )}\n        </form.AppField>\n\n        <form.AppField name=\"role\">\n          {(field) => (\n            <Field>\n              <FormLabel>Role</FormLabel>\n              <FieldContent>\n                <field.Select>\n                  <SelectTrigger>\n                    <SelectValue placeholder=\"Select your role\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"developer\">Developer</SelectItem>\n                    <SelectItem value=\"designer\">Designer</SelectItem>\n                    <SelectItem value=\"manager\">Manager</SelectItem>\n                  </SelectContent>\n                </field.Select>\n                <FormDescription>\n                  Choose the role that best describes you\n                </FormDescription>\n                <FormMessage />\n              </FieldContent>\n            </Field>\n          )}\n        </form.AppField>\n\n        <form.AppField name=\"bio\">\n          {(field) => (\n            <Field>\n              <FormLabel>Bio</FormLabel>\n              <FieldContent>\n                <field.Textarea\n                  placeholder=\"Tell us about yourself...\"\n                  rows={4}\n                />\n                <FormDescription>\n                  Write a short bio (10-200 characters)\n                </FormDescription>\n                <FormMessage />\n              </FieldContent>\n            </Field>\n          )}\n        </form.AppField>\n\n        <form.AppField name=\"newsletter\">\n          {(field) => (\n            <div className=\"flex items-start gap-3\">\n              <field.Checkbox id=\"newsletter\" />\n              <div className=\"space-y-1 leading-none\">\n                <FormLabel htmlFor=\"newsletter\" className=\"font-normal\">\n                  Subscribe to newsletter\n                </FormLabel>\n                <FormDescription>\n                  Receive weekly updates about new features\n                </FormDescription>\n                <FormMessage />\n              </div>\n            </div>\n          )}\n        </form.AppField>\n\n        <form.AppField name=\"notifications\">\n          {(field) => (\n            <div className=\"flex items-center justify-between rounded-lg border p-4\">\n              <div className=\"space-y-0.5\">\n                <FormLabel>Push Notifications</FormLabel>\n                <FormDescription>\n                  Receive push notifications about account activity\n                </FormDescription>\n              </div>\n              <Switch\n                checked={Boolean(field.state.value)}\n                onCheckedChange={(checked) =>\n                  field.handleChange(Boolean(checked))\n                }\n              />\n            </div>\n          )}\n        </form.AppField>\n\n        <form.AppField name=\"terms\">\n          {(field) => (\n            <div className=\"flex items-start gap-3\">\n              <field.Checkbox id=\"terms\" />\n              <div className=\"space-y-1 leading-none\">\n                <FormLabel htmlFor=\"terms\" className=\"font-normal\">\n                  I accept the terms and conditions\n                </FormLabel>\n                <FormDescription>\n                  You agree to our Terms of Service and Privacy Policy\n                </FormDescription>\n                <FormMessage />\n              </div>\n            </div>\n          )}\n        </form.AppField>\n\n        <form.AppForm>\n          <form.SubmitButton className=\"w-full\">\n            {form.state.isSubmitting ? \"Creating account...\" : \"Create Account\"}\n          </form.SubmitButton>\n        </form.AppForm>\n      </form>\n    </Card>\n  )\n}\n",
      "type": "registry:example"
    }
  ]
}