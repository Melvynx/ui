{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "better-auth-signin",
  "type": "registry:block",
  "title": "Better Auth Sign In Page",
  "description": "A complete and customizable sign-in page with email/password, OTP, and OAuth provider support using Better Auth.",
  "registryDependencies": [
    "button",
    "input",
    "label",
    "card",
    "avatar",
    "sonner",
    "https://ui.nowts.app/r/better-auth-otp.json"
  ],
  "files": [
    {
      "path": "blocks/better-auth-signin/sign-in-page.tsx",
      "content": "\"use client\"\n\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\"\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n} from \"@/components/ui/card\"\n\nimport { Divider } from \"./divider\"\nimport type { SignInAuthMethodsProps } from \"./sign-in-auth-methods\"\nimport { SignInAuthMethods } from \"./sign-in-auth-methods\"\nimport type { ProviderConfig } from \"./sign-in-provider-button\"\nimport { SignInProviderButton } from \"./sign-in-provider-button\"\n\nexport type SignInPageProps = {\n  appName: string\n  appIcon?: string\n  description?: string\n  providers?: ProviderConfig[]\n  signUpUrl?: string\n  onProviderSignIn: (providerId: string) => Promise<void>\n} & SignInAuthMethodsProps\n\nexport function SignInPage({\n  appName,\n  appIcon,\n  description = \"Please sign in to your account to continue.\",\n  providers = [],\n  signUpUrl,\n  onProviderSignIn,\n  ...authMethodsProps\n}: SignInPageProps) {\n  return (\n    <Card className=\"mx-auto h-auto w-full max-w-md p-6\">\n      <CardHeader className=\"flex flex-col items-center justify-center gap-2\">\n        <div className=\"flex flex-row items-center gap-2\">\n          {appIcon && (\n            <Avatar className=\"size-8 rounded-md\">\n              <AvatarImage src={appIcon} alt={`${appName} logo`} />\n              <AvatarFallback>\n                {appName.substring(0, 1).toUpperCase()}\n              </AvatarFallback>\n            </Avatar>\n          )}\n          <h1 className=\"text-xl font-semibold\">{appName}</h1>\n        </div>\n\n        <CardDescription className=\"text-center\">{description}</CardDescription>\n      </CardHeader>\n\n      <CardContent className=\"mt-4 space-y-6\">\n        <SignInAuthMethods {...authMethodsProps} />\n\n        {providers.length > 0 && (\n          <>\n            <Divider>or</Divider>\n\n            <div className=\"grid grid-cols-1 gap-2 lg:grid-cols-2 lg:gap-4\">\n              {providers.map((provider) => (\n                <SignInProviderButton\n                  key={provider.id}\n                  provider={provider}\n                  onSignIn={onProviderSignIn}\n                />\n              ))}\n            </div>\n          </>\n        )}\n\n        {signUpUrl && (\n          <p className=\"text-muted-foreground text-center text-xs\">\n            Don't have an account?{\" \"}\n            <a\n              href={signUpUrl}\n              className=\"text-primary underline underline-offset-4\"\n            >\n              Sign up\n            </a>\n          </p>\n        )}\n      </CardContent>\n    </Card>\n  )\n}\n",
      "type": "registry:page",
      "target": "app/sign-in/page.tsx"
    },
    {
      "path": "blocks/better-auth-signin/sign-in-auth-methods.tsx",
      "content": "import { useState } from \"react\"\n\nimport { OtpForm } from \"../better-auth-otp/components/better-auth-otp\"\nimport type { SignInPasswordFormProps } from \"./sign-in-password-form\"\nimport { SignInPasswordForm } from \"./sign-in-password-form\"\n\ntype AuthMethod = \"otp\" | \"password\"\n\nexport type SignInAuthMethodsProps = {\n  onSendOtp: (email: string) => Promise<void>\n  onVerifyOtp: (email: string, otp: string) => Promise<void>\n  onPasswordSignIn: SignInPasswordFormProps[\"onSubmit\"]\n  defaultEmail?: string\n  defaultMethod?: AuthMethod\n  forgotPasswordUrl?: string\n  onSuccess?: () => void\n  onError?: (error: string) => void\n}\n\nexport function SignInAuthMethods({\n  onSendOtp,\n  onVerifyOtp,\n  onPasswordSignIn,\n  defaultEmail = \"\",\n  defaultMethod = \"otp\",\n  forgotPasswordUrl,\n  onSuccess,\n  onError,\n}: SignInAuthMethodsProps) {\n  const [authMethod, setAuthMethod] = useState<AuthMethod>(defaultMethod)\n\n  if (authMethod === \"password\") {\n    return (\n      <div className=\"space-y-4\">\n        <SignInPasswordForm\n          onSubmit={onPasswordSignIn}\n          defaultEmail={defaultEmail}\n          forgotPasswordUrl={forgotPasswordUrl}\n          onError={onError}\n        />\n        <p className=\"text-muted-foreground text-center text-xs\">\n          Want faster sign in?{\" \"}\n          <button\n            type=\"button\"\n            onClick={() => setAuthMethod(\"otp\")}\n            className=\"text-primary underline underline-offset-4\"\n          >\n            Use OTP code\n          </button>\n        </p>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"space-y-4\">\n      <OtpForm\n        sendOtp={onSendOtp}\n        verifyOtp={onVerifyOtp}\n        defaultEmail={defaultEmail}\n        onSuccess={onSuccess}\n        onError={onError}\n      />\n      <p className=\"text-muted-foreground text-center text-xs\">\n        Prefer password sign in?{\" \"}\n        <button\n          type=\"button\"\n          onClick={() => setAuthMethod(\"password\")}\n          className=\"text-primary underline underline-offset-4\"\n        >\n          Use password\n        </button>\n      </p>\n    </div>\n  )\n}\n",
      "type": "registry:component"
    },
    {
      "path": "blocks/better-auth-signin/sign-in-password-form.tsx",
      "content": "\"use client\"\n\nimport { useState } from \"react\"\n\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\n\nexport type SignInPasswordFormProps = {\n  onSubmit: (credentials: { email: string; password: string }) => Promise<void>\n  defaultEmail?: string\n  forgotPasswordUrl?: string\n  onError?: (error: string) => void\n}\n\nexport function SignInPasswordForm({\n  onSubmit,\n  defaultEmail = \"\",\n  forgotPasswordUrl,\n  onError,\n}: SignInPasswordFormProps) {\n  const [email, setEmail] = useState(defaultEmail)\n  const [password, setPassword] = useState(\"\")\n  const [isLoading, setIsLoading] = useState(false)\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    setIsLoading(true)\n    try {\n      await onSubmit({ email, password })\n    } catch (error) {\n      onError?.(error instanceof Error ? error.message : \"Sign in failed\")\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  return (\n    <form onSubmit={handleSubmit} className=\"space-y-4\">\n      <div className=\"space-y-2\">\n        <Label htmlFor=\"email\">Email</Label>\n        <Input\n          id=\"email\"\n          type=\"email\"\n          placeholder=\"name@example.com\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          required\n          disabled={isLoading}\n          autoComplete=\"email\"\n        />\n      </div>\n\n      <div className=\"space-y-2\">\n        <div className=\"flex items-center justify-between\">\n          <Label htmlFor=\"password\">Password</Label>\n          {forgotPasswordUrl && (\n            <a\n              href={forgotPasswordUrl}\n              className=\"text-muted-foreground hover:text-foreground text-sm underline underline-offset-4\"\n            >\n              Forgot password?\n            </a>\n          )}\n        </div>\n        <Input\n          id=\"password\"\n          type=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          required\n          disabled={isLoading}\n          autoComplete=\"current-password\"\n        />\n      </div>\n\n      <Button type=\"submit\" className=\"w-full\" disabled={isLoading}>\n        {isLoading ? (\n          <div className=\"size-4 animate-spin rounded-full border-2 border-current border-t-transparent\" />\n        ) : (\n          \"Sign in\"\n        )}\n      </Button>\n    </form>\n  )\n}\n",
      "type": "registry:component"
    },
    {
      "path": "blocks/better-auth-signin/sign-in-provider-button.tsx",
      "content": "import { useState } from \"react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\nexport type ProviderConfig = {\n  id: string\n  name: string\n  icon: React.ReactNode\n  buttonClassName?: string\n}\n\ntype SignInProviderButtonProps = {\n  provider: ProviderConfig\n  onSignIn: (providerId: string) => Promise<void>\n  disabled?: boolean\n}\n\nexport function SignInProviderButton({\n  provider,\n  onSignIn,\n  disabled,\n}: SignInProviderButtonProps) {\n  const [isLoading, setIsLoading] = useState(false)\n\n  const handleSignIn = async () => {\n    setIsLoading(true)\n    try {\n      await onSignIn(provider.id)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  return (\n    <Button\n      variant=\"outline\"\n      size=\"lg\"\n      className={cn(\"w-full\", provider.buttonClassName)}\n      onClick={handleSignIn}\n      disabled={isLoading || disabled}\n    >\n      {isLoading ? (\n        <div className=\"size-4 animate-spin rounded-full border-2 border-current border-t-transparent\" />\n      ) : (\n        provider.icon\n      )}\n      <span className=\"ml-2\">Continue with {provider.name}</span>\n    </Button>\n  )\n}\n",
      "type": "registry:component"
    },
    {
      "path": "blocks/better-auth-signin/divider.tsx",
      "content": "import { cn } from \"@/lib/utils\"\n\ntype DividerProps = {\n  children?: React.ReactNode\n  className?: string\n}\n\nexport function Divider({ children, className }: DividerProps) {\n  return (\n    <div className={cn(\"relative\", className)}>\n      <div className=\"absolute inset-0 flex items-center\">\n        <span className=\"w-full border-t\" />\n      </div>\n      {children && (\n        <div className=\"relative flex justify-center text-xs uppercase\">\n          <span className=\"bg-background text-muted-foreground px-2\">\n            {children}\n          </span>\n        </div>\n      )}\n    </div>\n  )\n}\n",
      "type": "registry:component"
    }
  ],
  "categories": [
    "authentication"
  ]
}