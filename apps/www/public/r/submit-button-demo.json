{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "submit-button-demo",
  "type": "registry:example",
  "dependencies": [
    "zod"
  ],
  "registryDependencies": [
    "https://ui.nowts.app/r/submit-button.json",
    "https://ui.nowts.app/r/extended-form.json",
    "card",
    "input",
    "label",
    "sonner"
  ],
  "files": [
    {
      "path": "examples/submit-button-demo.tsx",
      "content": "\"use client\"\n\nimport { toast } from \"sonner\"\nimport { z } from \"zod\"\n\nimport { Card } from \"@/components/ui/card\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\nimport { ExtendedForm, useZodForm } from \"@/components/ui/extended-form\"\nimport { LoadingButton } from \"@/components/ui/submit-button\"\n\nconst formSchema = z.object({\n  email: z.string().email(\"Invalid email address\"),\n  message: z.string().min(10, \"Message must be at least 10 characters\"),\n})\n\nexport default function SubmitButtonDemo() {\n  const form = useZodForm({\n    schema: formSchema,\n    defaultValues: {\n      email: \"\",\n      message: \"\",\n    },\n  })\n\n  const onSubmit = async (data: z.infer<typeof formSchema>) => {\n    await new Promise((resolve) => setTimeout(resolve, 2000))\n    toast.success(\"Form submitted successfully!\")\n    console.log(data)\n    form.reset()\n  }\n\n  return (\n    <Card className=\"p-6\">\n      <ExtendedForm form={form} onSubmit={onSubmit} className=\"space-y-4\">\n        <div className=\"space-y-2\">\n          <Label htmlFor=\"email\">Email</Label>\n          <Input\n            id=\"email\"\n            type=\"email\"\n            placeholder=\"you@example.com\"\n            {...form.register(\"email\")}\n          />\n          {form.formState.errors.email && (\n            <p className=\"text-destructive text-sm\">\n              {form.formState.errors.email.message}\n            </p>\n          )}\n        </div>\n\n        <div className=\"space-y-2\">\n          <Label htmlFor=\"message\">Message</Label>\n          <Input\n            id=\"message\"\n            placeholder=\"Type your message here...\"\n            {...form.register(\"message\")}\n          />\n          {form.formState.errors.message && (\n            <p className=\"text-destructive text-sm\">\n              {form.formState.errors.message.message}\n            </p>\n          )}\n        </div>\n\n        <LoadingButton\n          type=\"submit\"\n          className=\"w-full\"\n          loading={form.formState.isSubmitting}\n        >\n          Submit Form\n        </LoadingButton>\n      </ExtendedForm>\n    </Card>\n  )\n}\n",
      "type": "registry:example"
    }
  ]
}