/* eslint-disable @typescript-eslint/ban-ts-comment */
/* eslint-disable @typescript-eslint/no-explicit-any */
// @ts-nocheck
// This file is autogenerated by scripts/build-registry.ts
// Do not edit this file directly.
import * as React from "react"

export const Index: Record<string, any> = {
  "index": {
    name: "index",
    description: "",
    type: "registry:style",
    registryDependencies: ["utils"],
    files: [],
    component: null,
    categories: undefined,
    meta: undefined,
  },
  "style": {
    name: "style",
    description: "",
    type: "registry:style",
    registryDependencies: ["utils"],
    files: [],
    component: null,
    categories: undefined,
    meta: undefined,
  },
  "submit-button": {
    name: "submit-button",
    description: "Enhanced submit button with loading state that automatically detects form submission state using React's useFormStatus hook.",
    type: "registry:ui",
    registryDependencies: ["button","https://ui.nowts.app/r/spinner.json"],
    files: [{
      path: "registry/nowts/ui/submit-button.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/nowts/ui/submit-button.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "spinner": {
    name: "spinner",
    description: "A simple loading spinner component using Lucide's Loader2 icon with spin animation.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/nowts/ui/spinner.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/nowts/ui/spinner.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "next-top-loader": {
    name: "next-top-loader",
    description: "A Next.js compatible top loading bar component with automatic navigation detection and customizable progress indicators.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/nowts/ui/next-top-loader.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/nowts/ui/next-top-loader.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "extended-form": {
    name: "extended-form",
    description: "Enhanced form component with Zod schema validation and TypeScript support using react-hook-form.",
    type: "registry:ui",
    registryDependencies: ["form"],
    files: [{
      path: "registry/nowts/ui/extended-form.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/nowts/ui/extended-form.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "tanstack-form": {
    name: "tanstack-form",
    description: "A complete form management solution using TanStack Form with Zod validation, supporting all input types including arrays and nested objects.",
    type: "registry:ui",
    registryDependencies: ["label","field"],
    files: [{
      path: "registry/nowts/ui/tanstack-form.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/nowts/ui/tanstack-form.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "typography": {
    name: "typography",
    description: "A polymorphic typography component with multiple variants for consistent text styling across your application.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/nowts/ui/typography.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/nowts/ui/typography.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "better-auth-otp": {
    name: "better-auth-otp",
    description: "A component for signing in with email OTP.",
    type: "registry:block",
    registryDependencies: ["button","input","label","textarea","card","input-otp","sonner"],
    files: [{
      path: "registry/nowts/blocks/better-auth-otp/components/better-auth-otp.tsx",
      type: "registry:component",
      target: ""
    },{
      path: "registry/nowts/blocks/better-auth-otp/hooks/use-countdown.ts",
      type: "registry:hook",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/nowts/blocks/better-auth-otp/components/better-auth-otp.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["authentication"],
    meta: undefined,
  },
  "better-auth-signin": {
    name: "better-auth-signin",
    description: "A complete and customizable sign-in page with email/password, OTP, and OAuth provider support using Better Auth.",
    type: "registry:block",
    registryDependencies: ["button","input","label","card","avatar","sonner","https://ui.nowts.app/r/better-auth-otp.json"],
    files: [{
      path: "registry/nowts/blocks/better-auth-signin/sign-in-page.tsx",
      type: "registry:page",
      target: "app/sign-in/page.tsx"
    },{
      path: "registry/nowts/blocks/better-auth-signin/sign-in-auth-methods.tsx",
      type: "registry:component",
      target: ""
    },{
      path: "registry/nowts/blocks/better-auth-signin/sign-in-password-form.tsx",
      type: "registry:component",
      target: ""
    },{
      path: "registry/nowts/blocks/better-auth-signin/sign-in-provider-button.tsx",
      type: "registry:component",
      target: ""
    },{
      path: "registry/nowts/blocks/better-auth-signin/divider.tsx",
      type: "registry:component",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/nowts/blocks/better-auth-signin/sign-in-page.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["authentication"],
    meta: undefined,
  },
  "better-auth-signup": {
    name: "better-auth-signup",
    description: "A complete sign-up form component with email and password authentication using Better Auth.",
    type: "registry:block",
    registryDependencies: ["button","input","label","card","sonner","https://ui.nowts.app/r/extended-form.json"],
    files: [{
      path: "registry/nowts/blocks/better-auth-signup/better-auth-signup.tsx",
      type: "registry:page",
      target: "app/sign-up/page.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/nowts/blocks/better-auth-signup/better-auth-signup.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["authentication"],
    meta: undefined,
  },
  "server-toast": {
    name: "server-toast",
    description: "A library for server-side toast notifications.",
    type: "registry:block",
    registryDependencies: ["sonner"],
    files: [{
      path: "registry/nowts/blocks/server-toast/server-toast.type.ts",
      type: "registry:lib",
      target: "lib/server-toast/server-toast.type.ts"
    },{
      path: "registry/nowts/blocks/server-toast/server-toast.ts",
      type: "registry:lib",
      target: "lib/server-toast/server-toast.ts"
    },{
      path: "registry/nowts/blocks/server-toast/server-toast.server.tsx",
      type: "registry:lib",
      target: "lib/server-toast/server-toast.server.tsx"
    },{
      path: "registry/nowts/blocks/server-toast/server-toast.client.tsx",
      type: "registry:lib",
      target: "lib/server-toast/server-toast.client.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/nowts/blocks/server-toast/server-toast.type.ts")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["notifications"],
    meta: undefined,
  },
  "dialog-manager": {
    name: "dialog-manager",
    description: "A powerful dialog manager for handling confirm, input, and custom dialogs with global state management.",
    type: "registry:block",
    registryDependencies: ["alert-dialog","button","input","label","sonner"],
    files: [{
      path: "registry/nowts/blocks/dialog-manager/dialog-types.ts",
      type: "registry:lib",
      target: "lib/dialog-manager/dialog-types.ts"
    },{
      path: "registry/nowts/blocks/dialog-manager/dialog-factory.ts",
      type: "registry:lib",
      target: "lib/dialog-manager/dialog-factory.ts"
    },{
      path: "registry/nowts/blocks/dialog-manager/dialog-store.ts",
      type: "registry:lib",
      target: "lib/dialog-manager/dialog-store.ts"
    },{
      path: "registry/nowts/blocks/dialog-manager/dialog-manager.ts",
      type: "registry:lib",
      target: "lib/dialog-manager/dialog-manager.ts"
    },{
      path: "registry/nowts/blocks/dialog-manager/dialog-component.tsx",
      type: "registry:lib",
      target: "lib/dialog-manager/dialog-component.tsx"
    },{
      path: "registry/nowts/blocks/dialog-manager/dialog-manager-renderer.tsx",
      type: "registry:lib",
      target: "lib/dialog-manager/dialog-manager-renderer.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/nowts/blocks/dialog-manager/dialog-types.ts")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["dialogs"],
    meta: undefined,
  },
  "form-management": {
    name: "form-management",
    description: "A comprehensive form management system with auto-save, unsaved changes warning, and sticky action bar for enhanced UX.",
    type: "registry:block",
    registryDependencies: ["button","tooltip","https://ui.nowts.app/r/submit-button.json","https://ui.nowts.app/r/extended-form.json","https://ui.nowts.app/r/use-debounce-fn.json","https://ui.nowts.app/r/use-warn-if-unsaved-changes.json","https://ui.nowts.app/r/use-is-client.json"],
    files: [{
      path: "registry/nowts/blocks/form-management/form-management.tsx",
      type: "registry:lib",
      target: "lib/form-management/form-management.tsx"
    },{
      path: "registry/nowts/blocks/form-management/form-management-sticky-bar.tsx",
      type: "registry:lib",
      target: "lib/form-management/form-management-sticky-bar.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/nowts/blocks/form-management/form-management.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["forms"],
    meta: undefined,
  },
  "use-mobile": {
    name: "use-mobile",
    description: "",
    type: "registry:hook",
    registryDependencies: undefined,
    files: [{
      path: "registry/nowts/hooks/use-mobile.ts",
      type: "registry:hook",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/nowts/hooks/use-mobile.ts")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "use-is-client": {
    name: "use-is-client",
    description: "A React hook to check if the component is rendered on the client side, useful for SSR/hydration scenarios.",
    type: "registry:hook",
    registryDependencies: undefined,
    files: [{
      path: "registry/nowts/hooks/use-is-client.ts",
      type: "registry:hook",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/nowts/hooks/use-is-client.ts")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "use-warn-if-unsaved-changes": {
    name: "use-warn-if-unsaved-changes",
    description: "A React hook that warns users before leaving the page when there are unsaved changes.",
    type: "registry:hook",
    registryDependencies: undefined,
    files: [{
      path: "registry/nowts/hooks/use-warn-if-unsaved-changes.ts",
      type: "registry:hook",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/nowts/hooks/use-warn-if-unsaved-changes.ts")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "use-debounce-fn": {
    name: "use-debounce-fn",
    description: "A React hook that debounces function calls to improve performance and prevent excessive API calls.",
    type: "registry:hook",
    registryDependencies: undefined,
    files: [{
      path: "registry/nowts/hooks/use-debounce-fn.ts",
      type: "registry:hook",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/nowts/hooks/use-debounce-fn.ts")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "use-copy-to-clipboard": {
    name: "use-copy-to-clipboard",
    description: "A React hook for copying text to the clipboard with fallback support and feedback state management.",
    type: "registry:hook",
    registryDependencies: undefined,
    files: [{
      path: "registry/nowts/hooks/use-copy-to-clipboard.ts",
      type: "registry:hook",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/nowts/hooks/use-copy-to-clipboard.ts")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "spinner-demo": {
    name: "spinner-demo",
    description: "",
    type: "registry:example",
    registryDependencies: ["https://ui.nowts.app/r/spinner.json","card"],
    files: [{
      path: "registry/nowts/examples/spinner-demo.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/nowts/examples/spinner-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "submit-button-demo": {
    name: "submit-button-demo",
    description: "",
    type: "registry:example",
    registryDependencies: ["https://ui.nowts.app/r/submit-button.json","https://ui.nowts.app/r/extended-form.json","card","input","label","sonner"],
    files: [{
      path: "registry/nowts/examples/submit-button-demo.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/nowts/examples/submit-button-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "extended-form-demo": {
    name: "extended-form-demo",
    description: "",
    type: "registry:example",
    registryDependencies: ["https://ui.nowts.app/r/extended-form.json","card","input","label","button","sonner"],
    files: [{
      path: "registry/nowts/examples/extended-form-demo.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/nowts/examples/extended-form-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "next-top-loader-demo": {
    name: "next-top-loader-demo",
    description: "",
    type: "registry:example",
    registryDependencies: ["https://ui.nowts.app/r/next-top-loader.json","card","button"],
    files: [{
      path: "registry/nowts/examples/next-top-loader-demo.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/nowts/examples/next-top-loader-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "tanstack-form-demo": {
    name: "tanstack-form-demo",
    description: "",
    type: "registry:example",
    registryDependencies: ["https://ui.nowts.app/r/tanstack-form.json","card","input","label","button","sonner","select"],
    files: [{
      path: "registry/nowts/examples/tanstack-form-demo.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/nowts/examples/tanstack-form-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "tanstack-form-complex-demo": {
    name: "tanstack-form-complex-demo",
    description: "",
    type: "registry:example",
    registryDependencies: ["https://ui.nowts.app/r/tanstack-form.json","card","input","label","button","select","checkbox","switch","textarea","sonner"],
    files: [{
      path: "registry/nowts/examples/tanstack-form-complex-demo.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/nowts/examples/tanstack-form-complex-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "tanstack-form-array-demo": {
    name: "tanstack-form-array-demo",
    description: "",
    type: "registry:example",
    registryDependencies: ["https://ui.nowts.app/r/tanstack-form.json","card","input","button","sonner"],
    files: [{
      path: "registry/nowts/examples/tanstack-form-array-demo.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/nowts/examples/tanstack-form-array-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "typography-demo": {
    name: "typography-demo",
    description: "",
    type: "registry:example",
    registryDependencies: ["https://ui.nowts.app/r/typography.json","card"],
    files: [{
      path: "registry/nowts/examples/typography-demo.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/nowts/examples/typography-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "server-toast-demo": {
    name: "server-toast-demo",
    description: "",
    type: "registry:example",
    registryDependencies: ["card","button","sonner"],
    files: [{
      path: "registry/nowts/examples/server-toast-demo.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/nowts/examples/server-toast-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "dialog-manager-demo": {
    name: "dialog-manager-demo",
    description: "",
    type: "registry:example",
    registryDependencies: ["https://ui.nowts.app/r/dialog-manager.json","card","button","sonner"],
    files: [{
      path: "registry/nowts/examples/dialog-manager-demo.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/nowts/examples/dialog-manager-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "form-management-demo": {
    name: "form-management-demo",
    description: "",
    type: "registry:example",
    registryDependencies: ["https://ui.nowts.app/r/form-management.json","https://ui.nowts.app/r/extended-form.json","card","input","label","textarea","sonner"],
    files: [{
      path: "registry/nowts/examples/form-management-demo.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/nowts/examples/form-management-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "better-auth-signin-demo": {
    name: "better-auth-signin-demo",
    description: "",
    type: "registry:example",
    registryDependencies: ["https://ui.nowts.app/r/better-auth-signin.json","sonner"],
    files: [{
      path: "registry/nowts/examples/better-auth-signin-demo.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/nowts/examples/better-auth-signin-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "better-auth-signup-demo": {
    name: "better-auth-signup-demo",
    description: "",
    type: "registry:example",
    registryDependencies: ["https://ui.nowts.app/r/better-auth-signup.json","sonner"],
    files: [{
      path: "registry/nowts/examples/better-auth-signup-demo.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/nowts/examples/better-auth-signup-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "better-auth-otp-demo": {
    name: "better-auth-otp-demo",
    description: "",
    type: "registry:example",
    registryDependencies: ["https://ui.nowts.app/r/better-auth-otp.json","card","button"],
    files: [{
      path: "registry/nowts/examples/better-auth-otp-demo.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/nowts/examples/better-auth-otp-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "use-debounce-fn-demo": {
    name: "use-debounce-fn-demo",
    description: "",
    type: "registry:example",
    registryDependencies: ["https://ui.nowts.app/r/use-debounce-fn.json","input","label"],
    files: [{
      path: "registry/nowts/examples/use-debounce-fn-demo.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/nowts/examples/use-debounce-fn-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "use-is-client-demo": {
    name: "use-is-client-demo",
    description: "",
    type: "registry:example",
    registryDependencies: ["https://ui.nowts.app/r/use-is-client.json","card"],
    files: [{
      path: "registry/nowts/examples/use-is-client-demo.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/nowts/examples/use-is-client-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "use-warn-if-unsaved-changes-demo": {
    name: "use-warn-if-unsaved-changes-demo",
    description: "",
    type: "registry:example",
    registryDependencies: ["https://ui.nowts.app/r/use-warn-if-unsaved-changes.json","card","input","label","button","textarea"],
    files: [{
      path: "registry/nowts/examples/use-warn-if-unsaved-changes-demo.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/nowts/examples/use-warn-if-unsaved-changes-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "use-copy-to-clipboard-demo": {
    name: "use-copy-to-clipboard-demo",
    description: "",
    type: "registry:example",
    registryDependencies: ["https://ui.nowts.app/r/use-copy-to-clipboard.json","card","button","input"],
    files: [{
      path: "registry/nowts/examples/use-copy-to-clipboard-demo.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/nowts/examples/use-copy-to-clipboard-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  }